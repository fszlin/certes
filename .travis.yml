language: csharp
mono: none
dotnet: 2.0.0
env:
  matrix:
    - CLI_VERSION=Latest
  global:
    - DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    - DOTNET_CLI_TELEMETRY_OPTOUT: 0
branches:
  only:
    - master
    - beta
    - preview
    - release
script:
  - dotnet restore
  # Certes.Tests
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then dotnet build -property:DebugType=Full --configuration Release --framework netcoreapp1.0 test/Certes.Tests/Certes.Tests.csproj; fi'
  - dotnet build -property:DebugType=Full --configuration Release --framework netcoreapp2.0 test/Certes.Tests/Certes.Tests.csproj
  - cd test/Certes.Tests/
  - dotnet minicover instrument --workdir ../../ --assemblies test/Certes.Tests/**/bin/**/*.dll --sources src/**/*.cs
  - dotnet minicover reset
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then dotnet xunit -framework netcoreapp1.0 -fxversion 2.0.0 -configuration Release -nobuild -maxthreads 4; fi'
  - dotnet xunit -framework netcoreapp2.0 -fxversion 2.0.0 -configuration Release -nobuild -maxthreads 4
  - dotnet minicover opencoverreport --workdir ../../ --output unit-coverage.xml
  - cd ../../
  #- bash <(curl -s https://codecov.io/bash) -f unit-coverage.xml -F unit
  # Certes.Tests.Integration
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then dotnet build -property:DebugType=Full --configuration Release --framework netcoreapp1.0 test/Certes.Tests.Integration/Certes.Tests.Integration.csproj; fi'
  - dotnet build -property:DebugType=Full --configuration Release --framework netcoreapp2.0 test/Certes.Tests.Integration/Certes.Tests.Integration.csproj
  - cd test/Certes.Tests.Integration/
  - dotnet minicover instrument --workdir ../../ --assemblies test/Certes.Tests.Integration/**/bin/**/*.dll --sources src/**/*.cs
  - dotnet minicover reset
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then dotnet xunit -framework netcoreapp1.0 -fxversion 2.0.0 -configuration Release -nobuild -maxthreads 4; fi'
  - dotnet xunit -framework netcoreapp2.0 -fxversion 2.0.0 -configuration Release -nobuild -maxthreads 4
  - dotnet minicover opencoverreport --workdir ../../ --output integration-coverage.xml
  - cd ../../
  #- bash <(curl -s https://codecov.io/bash) -f integration-coverage.xml -F integration
